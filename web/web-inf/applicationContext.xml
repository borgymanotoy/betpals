<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		  <list>
		      <value>/WEB-INF/app.properties</value>
		  </list>
		</property>
	</bean>
    <bean id="appRoot" class="java.lang.String">
        <constructor-arg type="java.lang.String" value="${betpals.root}" />
    </bean>

	<!-- Data source and Hibernate ======================================================== -->
	<bean id="defaultDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="defaultDataSource" />
		<property name="hibernateProperties">
			<value>hibernate.dialect=org.hibernate.dialect.HSQLDialect</value>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>se.telescopesoftware.betpals.domain.User</value>
				<value>se.telescopesoftware.betpals.domain.UserProfile</value>
				<value>se.telescopesoftware.betpals.domain.Account</value>
				<value>se.telescopesoftware.betpals.domain.AccountTransaction</value>
				<value>se.telescopesoftware.betpals.domain.Competition</value>
				<value>se.telescopesoftware.betpals.domain.Event</value>
				<value>se.telescopesoftware.betpals.domain.Alternative</value>
				<value>se.telescopesoftware.betpals.domain.Bet</value>
				<value>se.telescopesoftware.betpals.domain.Invitation</value>
				<value>se.telescopesoftware.betpals.domain.UserRequest</value>
				<value>se.telescopesoftware.betpals.domain.Group</value>
				<value>se.telescopesoftware.betpals.domain.Community</value>
				<value>se.telescopesoftware.betpals.domain.Authority</value>
				<value>se.telescopesoftware.betpals.domain.Activity</value>
				<value>se.telescopesoftware.betpals.domain.ActivityComment</value>
				<value>se.telescopesoftware.betpals.domain.ActivityLike</value>
			</list>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven />

	<!-- ====== Security ===================================================== -->

	<security:http create-session="always">
		<security:intercept-url pattern="/i/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/join/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/register.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/facebooklogin.html" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/favicon.ico" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/robots.txt" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/**" access="ROLE_USER" />
		<security:intercept-url pattern="/admin**" access="ROLE_SUPERVISOR" />
		
		<security:form-login login-page='/login.html' default-target-url='/index.html' authentication-failure-url="/login.html" />
		<security:logout logout-success-url="/login.html"/>
		<security:remember-me key="abracadabra"/>
	</security:http>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			ref="daoAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="saltSource" ref="saltSource" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<!-- <constructor-arg value="256"/> -->
	</bean>
	<bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="username" />
	</bean>


	<!-- This bean is optional; it isn't used by any other bean as it only listens 
		and logs -->
	<bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener" />

	<!-- ===== End of security =================================================== -->

	<!-- Repositories ========================================================= -->
	<bean id="userRepository"
		class="se.telescopesoftware.betpals.repository.HibernateUserRepositoryImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- ================================================================= -->

	<!-- Services =========================================================== -->
	<bean id="userDetailsService" class="se.telescopesoftware.betpals.services.UserServiceImpl">
		<property name="userRepository" ref="userRepository" />
	</bean>
	<!-- ================================================================= -->


</beans>
